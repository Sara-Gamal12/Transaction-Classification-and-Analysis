{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.11","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9775239,"sourceType":"datasetVersion","datasetId":5988050}],"dockerImageVersionId":31012,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!apt-get install openjdk-11-jdk-headless -qq > /dev/null\n!pip install -q pyspark","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:42:47.044429Z","iopub.execute_input":"2025-04-17T15:42:47.044779Z","iopub.status.idle":"2025-04-17T15:42:55.840727Z","shell.execute_reply.started":"2025-04-17T15:42:47.044746Z","shell.execute_reply":"2025-04-17T15:42:55.839215Z"}},"outputs":[],"execution_count":1},{"cell_type":"code","source":"import os\nos.environ[\"JAVA_HOME\"] = \"/usr/lib/jvm/java-11-openjdk-amd64\"\nos.environ[\"PATH\"] += \":/usr/lib/jvm/java-11-openjdk-amd64/bin\"","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:42:55.843010Z","iopub.execute_input":"2025-04-17T15:42:55.843305Z","iopub.status.idle":"2025-04-17T15:42:55.849066Z","shell.execute_reply.started":"2025-04-17T15:42:55.843281Z","shell.execute_reply":"2025-04-17T15:42:55.848033Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"import pyspark\nsc = pyspark.SparkContext(appName=\"FraudDetection\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:42:55.850055Z","iopub.execute_input":"2025-04-17T15:42:55.850322Z","iopub.status.idle":"2025-04-17T15:43:03.893640Z","shell.execute_reply.started":"2025-04-17T15:42:55.850302Z","shell.execute_reply":"2025-04-17T15:43:03.892658Z"}},"outputs":[{"name":"stderr","text":"Setting default log level to \"WARN\".\nTo adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).\n25/04/17 15:43:01 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n","output_type":"stream"}],"execution_count":3},{"cell_type":"code","source":"from pyspark import SparkConf\nfrom pyspark.sql import SparkSession\n\nspark = SparkSession \\\n    .builder \\\n    .appName(\"FraudDetection\") \\\n    .getOrCreate()\n\nspark.sparkContext.getConf().getAll()\nspark","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:43:03.896603Z","iopub.execute_input":"2025-04-17T15:43:03.897120Z","iopub.status.idle":"2025-04-17T15:43:06.102194Z","shell.execute_reply.started":"2025-04-17T15:43:03.897095Z","shell.execute_reply":"2025-04-17T15:43:06.099968Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"<pyspark.sql.session.SparkSession at 0x7f6b14115550>","text/html":"\n            <div>\n                <p><b>SparkSession - in-memory</b></p>\n                \n        <div>\n            <p><b>SparkContext</b></p>\n\n            <p><a href=\"http://b84caba123ce:4040\">Spark UI</a></p>\n\n            <dl>\n              <dt>Version</dt>\n                <dd><code>v3.5.4</code></dd>\n              <dt>Master</dt>\n                <dd><code>local[*]</code></dd>\n              <dt>AppName</dt>\n                <dd><code>FraudDetection</code></dd>\n            </dl>\n        </div>\n        \n            </div>\n        "},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"import numpy as np \nimport pandas as pd \nimport json\nimport matplotlib.pyplot as plt\nimport warnings\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.functions import col, sum as _sum\n\nwarnings.filterwarnings(\"ignore\")\ndata_path='/kaggle/input/transactions-fraud-datasets'","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:43:06.105435Z","iopub.execute_input":"2025-04-17T15:43:06.105892Z","iopub.status.idle":"2025-04-17T15:43:06.565316Z","shell.execute_reply.started":"2025-04-17T15:43:06.105860Z","shell.execute_reply":"2025-04-17T15:43:06.563740Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"with open(f'{data_path}/train_fraud_labels.json', 'r') as file:\n    train_fraud_labels = json.load(file)\ntarget_dict = {int(k):v for k,v in train_fraud_labels['target'].items()}","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:43:06.566107Z","iopub.execute_input":"2025-04-17T15:43:06.566676Z","iopub.status.idle":"2025-04-17T15:43:23.173538Z","shell.execute_reply.started":"2025-04-17T15:43:06.566635Z","shell.execute_reply":"2025-04-17T15:43:23.171427Z"}},"outputs":[],"execution_count":6},{"cell_type":"code","source":"transactions = pd.read_csv(f'{data_path}/transactions_data.csv')\ntransactions.describe","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:43:23.174813Z","iopub.execute_input":"2025-04-17T15:43:23.175118Z","iopub.status.idle":"2025-04-17T15:44:09.079240Z","shell.execute_reply.started":"2025-04-17T15:43:23.175095Z","shell.execute_reply":"2025-04-17T15:44:09.075856Z"}},"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"<bound method NDFrame.describe of                 id                 date  client_id  card_id   amount  \\\n0          7475327  2010-01-01 00:01:00       1556     2972  $-77.00   \n1          7475328  2010-01-01 00:02:00        561     4575   $14.57   \n2          7475329  2010-01-01 00:02:00       1129      102   $80.00   \n3          7475331  2010-01-01 00:05:00        430     2860  $200.00   \n4          7475332  2010-01-01 00:06:00        848     3915   $46.41   \n...            ...                  ...        ...      ...      ...   \n13305910  23761868  2019-10-31 23:56:00       1718     2379    $1.11   \n13305911  23761869  2019-10-31 23:56:00       1766     2066   $12.80   \n13305912  23761870  2019-10-31 23:57:00        199     1031   $40.44   \n13305913  23761873  2019-10-31 23:58:00       1986     5443    $4.00   \n13305914  23761874  2019-10-31 23:59:00        489     5697   $12.88   \n\n                    use_chip  merchant_id merchant_city merchant_state  \\\n0          Swipe Transaction        59935        Beulah             ND   \n1          Swipe Transaction        67570    Bettendorf             IA   \n2          Swipe Transaction        27092         Vista             CA   \n3          Swipe Transaction        27092   Crown Point             IN   \n4          Swipe Transaction        13051       Harwood             MD   \n...                      ...          ...           ...            ...   \n13305910    Chip Transaction        86438   West Covina             CA   \n13305911  Online Transaction        39261        ONLINE            NaN   \n13305912   Swipe Transaction         2925         Allen             TX   \n13305913    Chip Transaction        46284     Daly City             CA   \n13305914    Chip Transaction        24658    Greenbrier             TN   \n\n              zip   mcc errors  \n0         58523.0  5499    NaN  \n1         52722.0  5311    NaN  \n2         92084.0  4829    NaN  \n3         46307.0  4829    NaN  \n4         20776.0  5813    NaN  \n...           ...   ...    ...  \n13305910  91792.0  5499    NaN  \n13305911      NaN  5815    NaN  \n13305912  75002.0  4900    NaN  \n13305913  94014.0  5411    NaN  \n13305914  37073.0  5921    NaN  \n\n[13305915 rows x 12 columns]>"},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"transactions['target'] = transactions['id'].map(target_dict)\ntransactions = transactions.drop(['errors', 'merchant_state','zip'], axis=1)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:44:09.082990Z","iopub.execute_input":"2025-04-17T15:44:09.084404Z","iopub.status.idle":"2025-04-17T15:44:29.947849Z","shell.execute_reply.started":"2025-04-17T15:44:09.084323Z","shell.execute_reply":"2025-04-17T15:44:29.946050Z"}},"outputs":[],"execution_count":8},{"cell_type":"code","source":"display(transactions.head())\ndisplay(transactions.info())\ndisplay(transactions.isnull().sum())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:44:29.950255Z","iopub.execute_input":"2025-04-17T15:44:29.951673Z","iopub.status.idle":"2025-04-17T15:44:35.315271Z","shell.execute_reply.started":"2025-04-17T15:44:29.951627Z","shell.execute_reply":"2025-04-17T15:44:35.314340Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"        id                 date  client_id  card_id   amount  \\\n0  7475327  2010-01-01 00:01:00       1556     2972  $-77.00   \n1  7475328  2010-01-01 00:02:00        561     4575   $14.57   \n2  7475329  2010-01-01 00:02:00       1129      102   $80.00   \n3  7475331  2010-01-01 00:05:00        430     2860  $200.00   \n4  7475332  2010-01-01 00:06:00        848     3915   $46.41   \n\n            use_chip  merchant_id merchant_city   mcc target  \n0  Swipe Transaction        59935        Beulah  5499     No  \n1  Swipe Transaction        67570    Bettendorf  5311     No  \n2  Swipe Transaction        27092         Vista  4829     No  \n3  Swipe Transaction        27092   Crown Point  4829    NaN  \n4  Swipe Transaction        13051       Harwood  5813     No  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>date</th>\n      <th>client_id</th>\n      <th>card_id</th>\n      <th>amount</th>\n      <th>use_chip</th>\n      <th>merchant_id</th>\n      <th>merchant_city</th>\n      <th>mcc</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>7475327</td>\n      <td>2010-01-01 00:01:00</td>\n      <td>1556</td>\n      <td>2972</td>\n      <td>$-77.00</td>\n      <td>Swipe Transaction</td>\n      <td>59935</td>\n      <td>Beulah</td>\n      <td>5499</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>7475328</td>\n      <td>2010-01-01 00:02:00</td>\n      <td>561</td>\n      <td>4575</td>\n      <td>$14.57</td>\n      <td>Swipe Transaction</td>\n      <td>67570</td>\n      <td>Bettendorf</td>\n      <td>5311</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7475329</td>\n      <td>2010-01-01 00:02:00</td>\n      <td>1129</td>\n      <td>102</td>\n      <td>$80.00</td>\n      <td>Swipe Transaction</td>\n      <td>27092</td>\n      <td>Vista</td>\n      <td>4829</td>\n      <td>No</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7475331</td>\n      <td>2010-01-01 00:05:00</td>\n      <td>430</td>\n      <td>2860</td>\n      <td>$200.00</td>\n      <td>Swipe Transaction</td>\n      <td>27092</td>\n      <td>Crown Point</td>\n      <td>4829</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7475332</td>\n      <td>2010-01-01 00:06:00</td>\n      <td>848</td>\n      <td>3915</td>\n      <td>$46.41</td>\n      <td>Swipe Transaction</td>\n      <td>13051</td>\n      <td>Harwood</td>\n      <td>5813</td>\n      <td>No</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}},{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 13305915 entries, 0 to 13305914\nData columns (total 10 columns):\n #   Column         Dtype \n---  ------         ----- \n 0   id             int64 \n 1   date           object\n 2   client_id      int64 \n 3   card_id        int64 \n 4   amount         object\n 5   use_chip       object\n 6   merchant_id    int64 \n 7   merchant_city  object\n 8   mcc            int64 \n 9   target         object\ndtypes: int64(5), object(5)\nmemory usage: 1015.2+ MB\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"None"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"id                     0\ndate                   0\nclient_id              0\ncard_id                0\namount                 0\nuse_chip               0\nmerchant_id            0\nmerchant_city          0\nmcc                    0\ntarget           4390952\ndtype: int64"},"metadata":{}}],"execution_count":9},{"cell_type":"code","source":"transactions = transactions.dropna()\ndisplay(transactions.describe)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:44:35.324247Z","iopub.execute_input":"2025-04-17T15:44:35.324504Z","iopub.status.idle":"2025-04-17T15:44:43.414638Z","shell.execute_reply.started":"2025-04-17T15:44:35.324484Z","shell.execute_reply":"2025-04-17T15:44:43.413648Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<bound method NDFrame.describe of                 id                 date  client_id  card_id   amount  \\\n0          7475327  2010-01-01 00:01:00       1556     2972  $-77.00   \n1          7475328  2010-01-01 00:02:00        561     4575   $14.57   \n2          7475329  2010-01-01 00:02:00       1129      102   $80.00   \n4          7475332  2010-01-01 00:06:00        848     3915   $46.41   \n5          7475333  2010-01-01 00:07:00       1807      165    $4.81   \n...            ...                  ...        ...      ...      ...   \n13305905  23761862  2019-10-31 23:54:00        672     5001   $12.93   \n13305906  23761863  2019-10-31 23:54:00       1384     3723   $67.01   \n13305910  23761868  2019-10-31 23:56:00       1718     2379    $1.11   \n13305911  23761869  2019-10-31 23:56:00       1766     2066   $12.80   \n13305912  23761870  2019-10-31 23:57:00        199     1031   $40.44   \n\n                    use_chip  merchant_id merchant_city   mcc target  \n0          Swipe Transaction        59935        Beulah  5499     No  \n1          Swipe Transaction        67570    Bettendorf  5311     No  \n2          Swipe Transaction        27092         Vista  4829     No  \n4          Swipe Transaction        13051       Harwood  5813     No  \n5          Swipe Transaction        20519         Bronx  5942     No  \n...                      ...          ...           ...   ...    ...  \n13305905    Chip Transaction        47508         Cosby  7230     No  \n13305906    Chip Transaction        58136    Williamson  5812     No  \n13305910    Chip Transaction        86438   West Covina  5499     No  \n13305911  Online Transaction        39261        ONLINE  5815     No  \n13305912   Swipe Transaction         2925         Allen  4900     No  \n\n[8914963 rows x 10 columns]>"},"metadata":{}}],"execution_count":11},{"cell_type":"code","source":"transactions['target'].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:44:43.415846Z","iopub.execute_input":"2025-04-17T15:44:43.416197Z","iopub.status.idle":"2025-04-17T15:44:46.084094Z","shell.execute_reply.started":"2025-04-17T15:44:43.416169Z","shell.execute_reply":"2025-04-17T15:44:46.083032Z"}},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"target\nNo     8901631\nYes      13332\nName: count, dtype: int64"},"metadata":{}}],"execution_count":12},{"cell_type":"code","source":"users_df = pd.read_csv(f'{data_path}/users_data.csv')\nusers_df.rename(columns={'id': 'client_id'}, inplace=True)\ndisplay(users_df.info())\ndisplay(users_df.isnull().sum())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:44:46.085086Z","iopub.execute_input":"2025-04-17T15:44:46.085410Z","iopub.status.idle":"2025-04-17T15:44:46.137290Z","shell.execute_reply.started":"2025-04-17T15:44:46.085379Z","shell.execute_reply":"2025-04-17T15:44:46.136082Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 2000 entries, 0 to 1999\nData columns (total 14 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   client_id          2000 non-null   int64  \n 1   current_age        2000 non-null   int64  \n 2   retirement_age     2000 non-null   int64  \n 3   birth_year         2000 non-null   int64  \n 4   birth_month        2000 non-null   int64  \n 5   gender             2000 non-null   object \n 6   address            2000 non-null   object \n 7   latitude           2000 non-null   float64\n 8   longitude          2000 non-null   float64\n 9   per_capita_income  2000 non-null   object \n 10  yearly_income      2000 non-null   object \n 11  total_debt         2000 non-null   object \n 12  credit_score       2000 non-null   int64  \n 13  num_credit_cards   2000 non-null   int64  \ndtypes: float64(2), int64(7), object(5)\nmemory usage: 218.9+ KB\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"None"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"client_id            0\ncurrent_age          0\nretirement_age       0\nbirth_year           0\nbirth_month          0\ngender               0\naddress              0\nlatitude             0\nlongitude            0\nper_capita_income    0\nyearly_income        0\ntotal_debt           0\ncredit_score         0\nnum_credit_cards     0\ndtype: int64"},"metadata":{}}],"execution_count":13},{"cell_type":"code","source":"users_df = users_df[users_df['client_id'].isin(transactions['client_id'])]\ndisplay(users_df.info())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:44:46.138524Z","iopub.execute_input":"2025-04-17T15:44:46.138907Z","iopub.status.idle":"2025-04-17T15:44:46.221190Z","shell.execute_reply.started":"2025-04-17T15:44:46.138877Z","shell.execute_reply":"2025-04-17T15:44:46.220172Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 1219 entries, 0 to 1997\nData columns (total 14 columns):\n #   Column             Non-Null Count  Dtype  \n---  ------             --------------  -----  \n 0   client_id          1219 non-null   int64  \n 1   current_age        1219 non-null   int64  \n 2   retirement_age     1219 non-null   int64  \n 3   birth_year         1219 non-null   int64  \n 4   birth_month        1219 non-null   int64  \n 5   gender             1219 non-null   object \n 6   address            1219 non-null   object \n 7   latitude           1219 non-null   float64\n 8   longitude          1219 non-null   float64\n 9   per_capita_income  1219 non-null   object \n 10  yearly_income      1219 non-null   object \n 11  total_debt         1219 non-null   object \n 12  credit_score       1219 non-null   int64  \n 13  num_credit_cards   1219 non-null   int64  \ndtypes: float64(2), int64(7), object(5)\nmemory usage: 142.9+ KB\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"None"},"metadata":{}}],"execution_count":14},{"cell_type":"code","source":"users_transactions_df = pd.merge(transactions, users_df, on='client_id')\ndisplay(users_transactions_df.head())\ndisplay(users_transactions_df.info())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:44:46.222883Z","iopub.execute_input":"2025-04-17T15:44:46.223190Z","iopub.status.idle":"2025-04-17T15:44:55.483735Z","shell.execute_reply.started":"2025-04-17T15:44:46.223166Z","shell.execute_reply":"2025-04-17T15:44:55.482641Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"        id                 date  client_id  card_id   amount  \\\n0  7475327  2010-01-01 00:01:00       1556     2972  $-77.00   \n1  7475328  2010-01-01 00:02:00        561     4575   $14.57   \n2  7475329  2010-01-01 00:02:00       1129      102   $80.00   \n3  7475332  2010-01-01 00:06:00        848     3915   $46.41   \n4  7475333  2010-01-01 00:07:00       1807      165    $4.81   \n\n            use_chip  merchant_id merchant_city   mcc target  ...  \\\n0  Swipe Transaction        59935        Beulah  5499     No  ...   \n1  Swipe Transaction        67570    Bettendorf  5311     No  ...   \n2  Swipe Transaction        27092         Vista  4829     No  ...   \n3  Swipe Transaction        13051       Harwood  5813     No  ...   \n4  Swipe Transaction        20519         Bronx  5942     No  ...   \n\n   birth_month  gender                   address  latitude longitude  \\\n0            7  Female  594 Mountain View Street     46.80   -100.76   \n1            6    Male           604 Pine Street     40.80    -91.12   \n2            4    Male          2379 Forest Lane     33.18   -117.29   \n3            5    Male           166 River Drive     38.86    -76.60   \n4           12  Female           14780 Plum Lane     40.84    -73.87   \n\n  per_capita_income  yearly_income  total_debt credit_score num_credit_cards  \n0            $23679         $48277     $110153          740                4  \n1            $18076         $36853     $112139          834                5  \n2            $16894         $34449      $36540          686                3  \n3            $33529         $68362      $96182          711                2  \n4            $25537         $52065      $98613          828                5  \n\n[5 rows x 23 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>date</th>\n      <th>client_id</th>\n      <th>card_id</th>\n      <th>amount</th>\n      <th>use_chip</th>\n      <th>merchant_id</th>\n      <th>merchant_city</th>\n      <th>mcc</th>\n      <th>target</th>\n      <th>...</th>\n      <th>birth_month</th>\n      <th>gender</th>\n      <th>address</th>\n      <th>latitude</th>\n      <th>longitude</th>\n      <th>per_capita_income</th>\n      <th>yearly_income</th>\n      <th>total_debt</th>\n      <th>credit_score</th>\n      <th>num_credit_cards</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>7475327</td>\n      <td>2010-01-01 00:01:00</td>\n      <td>1556</td>\n      <td>2972</td>\n      <td>$-77.00</td>\n      <td>Swipe Transaction</td>\n      <td>59935</td>\n      <td>Beulah</td>\n      <td>5499</td>\n      <td>No</td>\n      <td>...</td>\n      <td>7</td>\n      <td>Female</td>\n      <td>594 Mountain View Street</td>\n      <td>46.80</td>\n      <td>-100.76</td>\n      <td>$23679</td>\n      <td>$48277</td>\n      <td>$110153</td>\n      <td>740</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>7475328</td>\n      <td>2010-01-01 00:02:00</td>\n      <td>561</td>\n      <td>4575</td>\n      <td>$14.57</td>\n      <td>Swipe Transaction</td>\n      <td>67570</td>\n      <td>Bettendorf</td>\n      <td>5311</td>\n      <td>No</td>\n      <td>...</td>\n      <td>6</td>\n      <td>Male</td>\n      <td>604 Pine Street</td>\n      <td>40.80</td>\n      <td>-91.12</td>\n      <td>$18076</td>\n      <td>$36853</td>\n      <td>$112139</td>\n      <td>834</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>7475329</td>\n      <td>2010-01-01 00:02:00</td>\n      <td>1129</td>\n      <td>102</td>\n      <td>$80.00</td>\n      <td>Swipe Transaction</td>\n      <td>27092</td>\n      <td>Vista</td>\n      <td>4829</td>\n      <td>No</td>\n      <td>...</td>\n      <td>4</td>\n      <td>Male</td>\n      <td>2379 Forest Lane</td>\n      <td>33.18</td>\n      <td>-117.29</td>\n      <td>$16894</td>\n      <td>$34449</td>\n      <td>$36540</td>\n      <td>686</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>7475332</td>\n      <td>2010-01-01 00:06:00</td>\n      <td>848</td>\n      <td>3915</td>\n      <td>$46.41</td>\n      <td>Swipe Transaction</td>\n      <td>13051</td>\n      <td>Harwood</td>\n      <td>5813</td>\n      <td>No</td>\n      <td>...</td>\n      <td>5</td>\n      <td>Male</td>\n      <td>166 River Drive</td>\n      <td>38.86</td>\n      <td>-76.60</td>\n      <td>$33529</td>\n      <td>$68362</td>\n      <td>$96182</td>\n      <td>711</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7475333</td>\n      <td>2010-01-01 00:07:00</td>\n      <td>1807</td>\n      <td>165</td>\n      <td>$4.81</td>\n      <td>Swipe Transaction</td>\n      <td>20519</td>\n      <td>Bronx</td>\n      <td>5942</td>\n      <td>No</td>\n      <td>...</td>\n      <td>12</td>\n      <td>Female</td>\n      <td>14780 Plum Lane</td>\n      <td>40.84</td>\n      <td>-73.87</td>\n      <td>$25537</td>\n      <td>$52065</td>\n      <td>$98613</td>\n      <td>828</td>\n      <td>5</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 23 columns</p>\n</div>"},"metadata":{}},{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 8914963 entries, 0 to 8914962\nData columns (total 23 columns):\n #   Column             Dtype  \n---  ------             -----  \n 0   id                 int64  \n 1   date               object \n 2   client_id          int64  \n 3   card_id            int64  \n 4   amount             object \n 5   use_chip           object \n 6   merchant_id        int64  \n 7   merchant_city      object \n 8   mcc                int64  \n 9   target             object \n 10  current_age        int64  \n 11  retirement_age     int64  \n 12  birth_year         int64  \n 13  birth_month        int64  \n 14  gender             object \n 15  address            object \n 16  latitude           float64\n 17  longitude          float64\n 18  per_capita_income  object \n 19  yearly_income      object \n 20  total_debt         object \n 21  credit_score       int64  \n 22  num_credit_cards   int64  \ndtypes: float64(2), int64(11), object(10)\nmemory usage: 1.5+ GB\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"None"},"metadata":{}}],"execution_count":15},{"cell_type":"code","source":"cards_df = pd.read_csv(f'{data_path}/cards_data.csv')\ncards_df.rename(columns={'id': 'card_id'}, inplace=True)\ndisplay(cards_df.info())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:44:55.484866Z","iopub.execute_input":"2025-04-17T15:44:55.485140Z","iopub.status.idle":"2025-04-17T15:44:55.525548Z","shell.execute_reply.started":"2025-04-17T15:44:55.485118Z","shell.execute_reply":"2025-04-17T15:44:55.524627Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 6146 entries, 0 to 6145\nData columns (total 13 columns):\n #   Column                 Non-Null Count  Dtype \n---  ------                 --------------  ----- \n 0   card_id                6146 non-null   int64 \n 1   client_id              6146 non-null   int64 \n 2   card_brand             6146 non-null   object\n 3   card_type              6146 non-null   object\n 4   card_number            6146 non-null   int64 \n 5   expires                6146 non-null   object\n 6   cvv                    6146 non-null   int64 \n 7   has_chip               6146 non-null   object\n 8   num_cards_issued       6146 non-null   int64 \n 9   credit_limit           6146 non-null   object\n 10  acct_open_date         6146 non-null   object\n 11  year_pin_last_changed  6146 non-null   int64 \n 12  card_on_dark_web       6146 non-null   object\ndtypes: int64(6), object(7)\nmemory usage: 624.3+ KB\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"None"},"metadata":{}}],"execution_count":16},{"cell_type":"code","source":"cards_df = cards_df[cards_df['client_id'].isin(users_df['client_id'])]\ndisplay(cards_df.info())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-17T15:44:55.526675Z","iopub.execute_input":"2025-04-17T15:44:55.527039Z","iopub.status.idle":"2025-04-17T15:44:55.542936Z","shell.execute_reply.started":"2025-04-17T15:44:55.527009Z","shell.execute_reply":"2025-04-17T15:44:55.541800Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 4514 entries, 0 to 6142\nData columns (total 13 columns):\n #   Column                 Non-Null Count  Dtype \n---  ------                 --------------  ----- \n 0   card_id                4514 non-null   int64 \n 1   client_id              4514 non-null   int64 \n 2   card_brand             4514 non-null   object\n 3   card_type              4514 non-null   object\n 4   card_number            4514 non-null   int64 \n 5   expires                4514 non-null   object\n 6   cvv                    4514 non-null   int64 \n 7   has_chip               4514 non-null   object\n 8   num_cards_issued       4514 non-null   int64 \n 9   credit_limit           4514 non-null   object\n 10  acct_open_date         4514 non-null   object\n 11  year_pin_last_changed  4514 non-null   int64 \n 12  card_on_dark_web       4514 non-null   object\ndtypes: int64(6), object(7)\nmemory usage: 493.7+ KB\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"None"},"metadata":{}}],"execution_count":17}]}